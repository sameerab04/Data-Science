{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# CS 1656 â€“ Introduction to Data Science (Fall 2019) \n",
    "\n",
    "## Instructor: Alexandros Labrinidis / Teaching Assistant: Xiaoting Li\n",
    "\n",
    "## Term Project \n",
    "\n",
   ]
  }
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
   ]
  }
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Goal\n",
    "The goal of this project is to expose you with a real data science problem, looking at the end-to-end pipeline. \n",
    "\n",
    "### What to do \n",
    "You are asked to write a Python Jupyter notebook, called `bikeviz.ipynb` that will:\n",
    "* [Task 1] access historical bike rental data for 2019 from HealthyRidePGH and summarize the rental data  \n",
    "* [Task 2] create graphs to show the popularity of the different rental stations, given filter conditions  \n",
    "* [Task 3] create graphs to show the rebalancing issue  \n",
    "* [Task 4] cluster the data to group similar stations together, using a variety of clustering functions and visualize the results of the clustering.  \n",
    "\n",
    "### Jupyter Notebook Rules\n",
    "This skeleton is provided for you to complete the project. Please add your code in the code cells below each Task. Feel free to add cells as needed. Do not remove existing cells."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "\n",
    "# Feel free to add here any other libraries as specified in the project description\n",
    "from sklearn import cluster\n",
    "import numpy as np"
   ]
  }
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For the sake of interactive display in Jupyter, we will enable matplotlib inline."
   ]
  }
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline"
   ]
  }
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### [Task 0] Warming Up\n",
    "Task 0 is for testing. It is used to ensure that this Jupyter Notebook skeleton works on both your machines and our machine. Please run the following code to see if you can see a line plot. The line plot is the basic plot that we have seen in Recitation2. "
   ]
  }
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import datetime\n",
    "from pandas.plotting import register_matplotlib_converters\n",
    "register_matplotlib_converters()\n",
    "df = pd.read_csv('http://data.cs1656.org/KPIT_Aug17.csv',\\\n",
    "                       sep=',', engine='python', parse_dates=['EST'])\n",
    "p1 = plt.plot(df['EST'],df['MeanDew PointF'])\n",
    "p2 = plt.plot(df['EST'],df['Mean TemperatureF'])\n",
    "plt.legend([p1[0],p2[0]], ['Mean Dew Point', 'Mean Temperature'])\n",
    "\n",
    "plt.show()"
   ]
  }
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "--- \n",
    "Add your code below this line\n",
    "\n",
    "---\n",
    "### Task 1"
   ]
  }
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In this task you will need to access historical bike rental data for 2019 from HealthyRidePGH and summarize the rental data."
   ]
  }
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Task 1.1"
   ]
  }
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Station id</th>\n",
       "      <th>fromCNT</th>\n",
       "      <th>toCNT</th>\n",
       "      <th>rebalCNT</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>4</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>1002.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>1009.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>1010.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>1012.0</td>\n",
       "      <td>4</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>1021.0</td>\n",
       "      <td>2</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>1023.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>1024.0</td>\n",
       "      <td>2</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>1028.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>1029.0</td>\n",
       "      <td>2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>10</td>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>1031.0</td>\n",
       "      <td>2</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>11</td>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>1033.0</td>\n",
       "      <td>4</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>12</td>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>1045.0</td>\n",
       "      <td>2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>13</td>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>1048.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>14</td>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>1049.0</td>\n",
       "      <td>3</td>\n",
       "      <td>4.0</td>\n",
       "      <td>-1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15</td>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>1061.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>16</td>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>1069.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>17</td>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>1094.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>18</td>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>1099.0</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>19</td>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>49441.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Date  Station id  fromCNT  toCNT  rebalCNT\n",
       "0   2019-01-01      1000.0        4    4.0       0.0\n",
       "1   2019-01-01      1002.0        1    1.0       0.0\n",
       "2   2019-01-01      1009.0        1    NaN       NaN\n",
       "3   2019-01-01      1010.0        1    1.0       0.0\n",
       "4   2019-01-01      1012.0        4    3.0       1.0\n",
       "5   2019-01-01      1021.0        2    1.0       1.0\n",
       "6   2019-01-01      1023.0        1    1.0       0.0\n",
       "7   2019-01-01      1024.0        2    1.0       1.0\n",
       "8   2019-01-01      1028.0        1    1.0       0.0\n",
       "9   2019-01-01      1029.0        2    2.0       0.0\n",
       "10  2019-01-01      1031.0        2    1.0       1.0\n",
       "11  2019-01-01      1033.0        4    3.0       1.0\n",
       "12  2019-01-01      1045.0        2    2.0       0.0\n",
       "13  2019-01-01      1048.0        1    1.0       0.0\n",
       "14  2019-01-01      1049.0        3    4.0      -1.0\n",
       "15  2019-01-01      1061.0        1    1.0       0.0\n",
       "16  2019-01-01      1069.0        1    1.0       0.0\n",
       "17  2019-01-01      1094.0        1    NaN       NaN\n",
       "18  2019-01-01      1099.0        2    NaN       NaN\n",
       "19  2019-01-01     49441.0        1    NaN       NaN"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Q1 = pd.read_csv('HealthyRideRentals2019-Q1.csv')\n",
    "Q2 = pd.read_csv('HealthyRideRentals2019-Q2.csv')\n",
    "Q3 = pd.read_csv('HealthyRideRentals2019-Q3.csv')\n",
    "df_list = [Q1, Q2, Q3] # files that are read in.\n",
    "df = pd.concat(df_list) # concate all the files from list.\n",
    "df['Starttime'] = pd.to_datetime(df['Starttime'], errors='coerce')\n",
    "df['Stoptime'] = pd.to_datetime(df['Stoptime'], errors='coerce')\n",
    "\n",
    "#Daily Breakdown\n",
    "fromCNT = df.groupby([df.Starttime.dt.date, 'From station id']).size().reset_index(name=\"fromCNT\")\n",
    "fromCNT.rename(columns = {'Starttime':'Date'}, inplace = True)\n",
    "fromCNT.rename(columns = {'From station id':'Station id'}, inplace = True)\n",
    "toCNT = df.groupby([df.Stoptime.dt.date, 'To station id']).size().reset_index(name=\"toCNT\")\n",
    "toCNT.rename(columns = {'Stoptime':'Date'}, inplace = True)\n",
    "toCNT.rename(columns = {'To station id':'Station id'}, inplace = True)\n",
    "#fromCNT.to_csv('fromCNT.csv', encoding='utf-8') # Used for testing\n",
    "#toCNT.to_csv('toCNT.csv', encoding='utf-8') # Used for testing\n",
    "day = pd.merge(fromCNT, toCNT,  how='left', on=['Date', 'Station id'])\n",
    "day['rebalCNT'] = day['fromCNT'] - day['toCNT']\n",
    "day[:20]"
   ]
  }
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Task 1.2"
   ]
  }
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Month</th>\n",
       "      <th>Station id</th>\n",
       "      <th>fromCNT</th>\n",
       "      <th>toCNT</th>\n",
       "      <th>rebalCNT</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>35</td>\n",
       "      <td>43.0</td>\n",
       "      <td>-8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1001.0</td>\n",
       "      <td>59</td>\n",
       "      <td>82.0</td>\n",
       "      <td>-23.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1002.0</td>\n",
       "      <td>36</td>\n",
       "      <td>27.0</td>\n",
       "      <td>9.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1003.0</td>\n",
       "      <td>11</td>\n",
       "      <td>12.0</td>\n",
       "      <td>-1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1004.0</td>\n",
       "      <td>32</td>\n",
       "      <td>31.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>1005.0</td>\n",
       "      <td>17</td>\n",
       "      <td>13.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>1006.0</td>\n",
       "      <td>39</td>\n",
       "      <td>27.0</td>\n",
       "      <td>12.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>1007.0</td>\n",
       "      <td>6</td>\n",
       "      <td>2.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>1008.0</td>\n",
       "      <td>5</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>1009.0</td>\n",
       "      <td>42</td>\n",
       "      <td>44.0</td>\n",
       "      <td>-2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>10</td>\n",
       "      <td>1</td>\n",
       "      <td>1010.0</td>\n",
       "      <td>44</td>\n",
       "      <td>49.0</td>\n",
       "      <td>-5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>1011.0</td>\n",
       "      <td>25</td>\n",
       "      <td>28.0</td>\n",
       "      <td>-3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>1012.0</td>\n",
       "      <td>16</td>\n",
       "      <td>20.0</td>\n",
       "      <td>-4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>1013.0</td>\n",
       "      <td>35</td>\n",
       "      <td>28.0</td>\n",
       "      <td>7.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>14</td>\n",
       "      <td>1</td>\n",
       "      <td>1014.0</td>\n",
       "      <td>2</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>1015.0</td>\n",
       "      <td>41</td>\n",
       "      <td>27.0</td>\n",
       "      <td>14.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>1016.0</td>\n",
       "      <td>50</td>\n",
       "      <td>35.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>17</td>\n",
       "      <td>1</td>\n",
       "      <td>1017.0</td>\n",
       "      <td>28</td>\n",
       "      <td>35.0</td>\n",
       "      <td>-7.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "      <td>1018.0</td>\n",
       "      <td>4</td>\n",
       "      <td>15.0</td>\n",
       "      <td>-11.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>19</td>\n",
       "      <td>1</td>\n",
       "      <td>1019.0</td>\n",
       "      <td>24</td>\n",
       "      <td>33.0</td>\n",
       "      <td>-9.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Month  Station id  fromCNT  toCNT  rebalCNT\n",
       "0       1      1000.0       35   43.0      -8.0\n",
       "1       1      1001.0       59   82.0     -23.0\n",
       "2       1      1002.0       36   27.0       9.0\n",
       "3       1      1003.0       11   12.0      -1.0\n",
       "4       1      1004.0       32   31.0       1.0\n",
       "5       1      1005.0       17   13.0       4.0\n",
       "6       1      1006.0       39   27.0      12.0\n",
       "7       1      1007.0        6    2.0       4.0\n",
       "8       1      1008.0        5    2.0       3.0\n",
       "9       1      1009.0       42   44.0      -2.0\n",
       "10      1      1010.0       44   49.0      -5.0\n",
       "11      1      1011.0       25   28.0      -3.0\n",
       "12      1      1012.0       16   20.0      -4.0\n",
       "13      1      1013.0       35   28.0       7.0\n",
       "14      1      1014.0        2    1.0       1.0\n",
       "15      1      1015.0       41   27.0      14.0\n",
       "16      1      1016.0       50   35.0      15.0\n",
       "17      1      1017.0       28   35.0      -7.0\n",
       "18      1      1018.0        4   15.0     -11.0\n",
       "19      1      1019.0       24   33.0      -9.0"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Monthly Breakdown\n",
    "fromCNT1 = df.groupby([df.Starttime.dt.month, 'From station id']).size().reset_index(name=\"fromCNT\")\n",
    "fromCNT1.rename(columns = {'Starttime':'Month'}, inplace = True)\n",
    "fromCNT1.rename(columns = {'From station id':'Station id'}, inplace = True)\n",
    "toCNT1 = df.groupby([df.Stoptime.dt.month, 'To station id']).size().reset_index(name=\"toCNT\")\n",
    "toCNT1.rename(columns = {'Stoptime':'Month'}, inplace = True)\n",
    "toCNT1.rename(columns = {'To station id':'Station id'}, inplace = True)\n",
    "#fromCNT1.to_csv('fromCNT1.csv', encoding='utf-8') # Used for testing\n",
    "#toCNT1.to_csv('toCNT1.csv', encoding='utf-8') # Used for testing\n",
    "month = pd.merge(fromCNT1, toCNT1,  how='left', on=['Month', 'Station id'])\n",
    "month['rebalCNT'] = month['fromCNT'] - month['toCNT']\n",
    "month[:20]"
   ]
  }
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---\n",
    "### Task 2"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In this task you will need to create graphs to show the popularity of the different rental stations, given filter conditions."
   ]
  }
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "# FILTER VARIABLES -- feel free to edit the values, but the names of the variables must remain \n",
    "#                     as they are and should be used by your code accordingly from this point on\n",
    "\n",
    "filter_month = 1\n",
    "filter_stationID = 1046\n"
   ]
  }
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Task 2.1"
   ]
  }
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "month_filter = month[month['Month']== filter_month]\n",
    "month_filter = month_filter.sort_values(by=['fromCNT'], ascending=False)\n",
    "month_filter = month_filter[:25]\n",
    "fig = plt.figure(figsize=(15, 10))\n",
    "plt.bar(range(len(month_filter['Station id'])),month_filter['fromCNT'], align = 'center')\n",
    "# Formatting graph\n",
    "plt.xticks(range(len(month_filter['Station id'])), month_filter['Station id'],\n",
    "               rotation = 90, fontsize = 10)\n",
    "plt.xlabel('StationID')\n",
    "plt.ylabel('fromCNT')\n",
    "plt.title('Most Popular station for the month')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Task 2.2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fromCNT2 = df.groupby([df.Starttime.dt.date, 'From station id']).size().reset_index(name=\"fromCNT\")\n",
    "fromCNT2.rename(columns = {'Starttime':'Date'}, inplace = True)\n",
    "fromCNT2.rename(columns = {'From station id':'Station id'}, inplace = True)\n",
    "toCNT2 = df.groupby([df.Stoptime.dt.date, 'To station id']).size().reset_index(name=\"toCNT\")\n",
    "toCNT2.rename(columns = {'Stoptime':'Date'}, inplace = True)\n",
    "toCNT2.rename(columns = {'To station id':'Station id'}, inplace = True)\n",
    "day = pd.merge(fromCNT2, toCNT2,  how='left', on=['Date', 'Station id'])\n",
    "day['rebalCNT'] = day['fromCNT'] - day['toCNT']\n",
    "day['Month'] = pd.DatetimeIndex(day['Date']).month\n",
    "month1 = day\n",
    "month_filter = month1[month1['Month']== filter_month]\n",
    "stationID_filter = month_filter[month_filter['Station id']== filter_stationID]\n",
    "stationID_filter = stationID_filter.sort_values(by=['fromCNT'], ascending=False)\n",
    "fig = plt.figure(figsize=(15, 10))\n",
    "plt.bar(range(len(stationID_filter['fromCNT'])),stationID_filter['fromCNT'], align = 'center')\n",
    "# Formatting graph\n",
    "plt.xticks(range(len(stationID_filter['Date'])), stationID_filter['Date'],\\\n",
    "               rotation = 90, fontsize = 10)\n",
    "plt.xlabel('Days of Month')\n",
    "plt.ylabel('fromCNT')\n",
    "plt.title('Day v/s fromCNT for station id')\n",
    "plt.show()"
   ]
  }
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Task 2.3"
   ]
  }
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "totalBikes = df.groupby([df.Starttime.dt.month, 'Bikeid']).size().reset_index(name=\"totalBikes\")\n",
    "totalBikes.rename(columns = {'Starttime':'Month'}, inplace = True)\n",
    "month_filter = totalBikes[totalBikes['Month']== filter_month]\n",
    "month_filter = month_filter.sort_values(by=['totalBikes'], ascending=False)\n",
    "month_filter = month_filter[:25]\n",
    "fig = plt.figure(figsize=(15, 10))\n",
    "plt.bar(range(len(month_filter['Bikeid'])),month_filter['totalBikes'], align = 'center')\n",
    "# Formatting graph\n",
    "plt.xticks(range(len(month_filter['Bikeid'])), month_filter['Bikeid'],\n",
    "               rotation = 90, fontsize = 10)\n",
    "plt.xlabel('BikeID')\n",
    "plt.ylabel('Number of times bike was rented')\n",
    "plt.title('Most Popular bikes for the month')\n",
    "plt.show()"
   ]
  }
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---\n",
    "### Task 3"
   ]
  }
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In this task you will create graphs to show the rebalancing issue."
   ]
  }
  {
   "cell_type": "markdown",
   "metadata": {
    "scrolled": false
   },
   "source": [
    "### Task 3.1"
   ]
  }
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "month_filter = month[month['Month']== filter_month]\n",
    "month_filter = month_filter.sort_values(by=['rebalCNT'], ascending=False)\n",
    "month_filter = month_filter[:25]\n",
    "month_filter\n",
    "fig = plt.figure(figsize=(15, 10))\n",
    "plt.bar(range(len(month_filter['Station id'])),month_filter['rebalCNT'], align = 'center')\n",
    "# Formatting graph\n",
    "plt.xticks(range(len(month_filter['Station id'])), month_filter['Station id'],\n",
    "               rotation = 90, fontsize = 10)\n",
    "plt.xlabel('StationID')\n",
    "plt.ylabel('rebalCNT')\n",
    "plt.title('Most Popular station for the month')\n",
    "plt.show()"
   ]
  }
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Task 3.2"
   ]
  }
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fromCNT2 = df.groupby([df.Starttime.dt.date, 'From station id']).size().reset_index(name=\"fromCNT\")\n",
    "fromCNT2.rename(columns = {'Starttime':'Date'}, inplace = True)\n",
    "fromCNT2.rename(columns = {'From station id':'Station id'}, inplace = True)\n",
    "toCNT2 = df.groupby([df.Stoptime.dt.date, 'To station id']).size().reset_index(name=\"toCNT\")\n",
    "toCNT2.rename(columns = {'Stoptime':'Date'}, inplace = True)\n",
    "toCNT2.rename(columns = {'To station id':'Station id'}, inplace = True)\n",
    "day = pd.merge(fromCNT2, toCNT2,  how='left', on=['Date', 'Station id'])\n",
    "day['rebalCNT'] = day['fromCNT'] - day['toCNT']\n",
    "day['Month'] = pd.DatetimeIndex(day['Date']).month\n",
    "month1 = day\n",
    "month_filter = month1[month1['Month']== filter_month]\n",
    "stationID_filter = month_filter[month_filter['Station id']== filter_stationID]\n",
    "stationID_filter = stationID_filter.sort_values(by=['rebalCNT'], ascending=False)\n",
    "fig = plt.figure(figsize=(15, 10))\n",
    "plt.bar(range(len(stationID_filter['rebalCNT'])),stationID_filter['rebalCNT'], align = 'center')\n",
    "# Formatting graph\n",
    "plt.xticks(range(len(stationID_filter['Date'])), stationID_filter['Date'],\\\n",
    "               rotation = 90, fontsize = 10)\n",
    "plt.xlabel('Days of Month')\n",
    "plt.ylabel('rebalCNT')\n",
    "plt.title('Day v/s fromCNT for station id')\n",
    "plt.show()"
   ]
  }
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---\n",
    "### Task 4"
   ]
  }
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In this task you will cluster the data to group similar stations together, using a variety of clustering functions and visualize the results of the clustering."
   ]
  }
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Used to get the data structures for three months\n",
    "task4 = month.drop(columns=['toCNT', 'rebalCNT'], axis=1)\n",
    "# fromCNT7\n",
    "fromCNT7 = task4[task4['Month']== 7]\n",
    "fromCNT7 = fromCNT7.sort_values(by=['fromCNT'], ascending=False)\n",
    "\n",
    "# fromCNT8\n",
    "fromCNT8 = task4[task4['Month']== 8]\n",
    "fromCNT8 = fromCNT8.sort_values(by=['fromCNT'], ascending=False)\n",
    "\n",
    "# fromCNT9\n",
    "fromCNT9 = task4[task4['Month']== 9]\n",
    "fromCNT9 = fromCNT9.sort_values(by=['fromCNT'], ascending=False)\n",
    "\n",
    "task4_a = month.drop(columns=['toCNT', 'fromCNT'], axis=1)\n",
    "task4_a = task4_a[np.isfinite(task4_a['rebalCNT'])]\n",
    "# rebalCNT7\n",
    "rebalCNT7 = task4_a[task4_a['Month']== 7]\n",
    "rebalCNT7 = rebalCNT7.sort_values(by=['rebalCNT'], ascending=False)\n",
    "\n",
    "# rebalCNT8\n",
    "rebalCNT8 = task4_a[task4_a['Month']== 8]\n",
    "rebalCNT8 = rebalCNT8.sort_values(by=['rebalCNT'], ascending=False)\n",
    "\n",
    "# rebalCNT9\n",
    "rebalCNT9 = task4_a[task4_a['Month']== 9]\n",
    "rebalCNT9 = rebalCNT9.sort_values(by=['rebalCNT'], ascending=False)\n"
   ]
  }
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Task 4.1"
   ]
  }
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "# K-means\n",
    "k_means_one = cluster.KMeans(n_clusters=4, init = 'k-means++',random_state=5000)\n",
    "k_means_one_fromCNT7 = k_means_one.fit(fromCNT7[['Station id', 'fromCNT']])\n",
    "labels1 = k_means_one_fromCNT7.labels_\n",
    "fromCNT7['ClusterID'] = labels1\n",
    "plot_fromCNT7 = fromCNT7['ClusterID'].value_counts().reset_index(name='Number of Stations')\n",
    "plot_fromCNT7.rename(columns = {'index':'Cluster id'}, inplace = True)\n",
    "\n",
    "k_means_one_rebalCNT7 = k_means_one.fit(rebalCNT7[['Station id', 'rebalCNT']])\n",
    "labels2 = k_means_one_rebalCNT7.labels_\n",
    "rebalCNT7['ClusterID'] = labels2\n",
    "plot_rebalCNT7 = rebalCNT7['ClusterID'].value_counts().reset_index(name='Number of Stations')\n",
    "plot_rebalCNT7.rename(columns = {'index':'Cluster id'}, inplace = True)\n",
    "\n",
    "k_means_two = cluster.KMeans(n_clusters=5, init = 'k-means++',random_state=5000)\n",
    "k_means_two_fromCNT8 = k_means_two.fit(fromCNT8[['Station id', 'fromCNT']])\n",
    "labels3 = k_means_two_fromCNT8.labels_\n",
    "fromCNT8['ClusterID'] = labels3\n",
    "plot_fromCNT8 = fromCNT8['ClusterID'].value_counts().reset_index(name='Number of Stations')\n",
    "plot_fromCNT8.rename(columns = {'index':'Cluster id'}, inplace = True)\n",
    "\n",
    "k_means_two_rebalCNT8 = k_means_two.fit(rebalCNT8[['Station id', 'rebalCNT']])\n",
    "labels4 = k_means_two_rebalCNT8.labels_\n",
    "rebalCNT8['ClusterID'] = labels4\n",
    "plot_rebalCNT8 = rebalCNT8['ClusterID'].value_counts().reset_index(name='Number of Stations')\n",
    "plot_rebalCNT8.rename(columns = {'index':'Cluster id'}, inplace = True)\n",
    "\n",
    "k_means_three = cluster.KMeans(n_clusters=6, init = 'k-means++',random_state=5000)\n",
    "k_means_three_fromCNT9 = k_means_three.fit(fromCNT9[['Station id', 'fromCNT']])\n",
    "labels5 = k_means_three_fromCNT9.labels_\n",
    "fromCNT9['ClusterID'] = labels5\n",
    "plot_fromCNT9 = fromCNT9['ClusterID'].value_counts().reset_index(name='Number of Stations')\n",
    "plot_fromCNT9.rename(columns = {'index':'Cluster id'}, inplace = True)\n",
    "\n",
    "k_means_three_rebalCNT9 = k_means_three.fit(rebalCNT9[['Station id', 'rebalCNT']])\n",
    "labels6 = k_means_three_rebalCNT9.labels_\n",
    "rebalCNT9['ClusterID'] = labels6\n",
    "plot_rebalCNT9 = rebalCNT9['ClusterID'].value_counts().reset_index(name='Number of Stations')\n",
    "plot_rebalCNT9.rename(columns = {'index':'Cluster id'}, inplace = True)\n",
    "\n",
    "# print(k_means_one_fromCNT7)\n",
    "# print(k_means_one_rebalCNT7)\n",
    "# print(k_means_two_fromCNT8)\n",
    "# print(k_means_two_rebalCNT8)\n",
    "# print(k_means_three_fromCNT9)\n",
    "# print(k_means_three_rebalCNT9)\n",
    "\n",
    "# DBSCAN\n",
    "dbscan = cluster.DBSCAN(eps=3, min_samples=2)\n",
    "dbscan_one_fromCNT7 = dbscan.fit(fromCNT7[['Station id', 'fromCNT']])\n",
    "labels7 = dbscan_one_fromCNT7.labels_\n",
    "fromCNT7['ClusterID'] = labels7\n",
    "plot_dbscan_fromCNT7 = fromCNT7['ClusterID'].value_counts().reset_index(name='Number of Stations')\n",
    "plot_dbscan_fromCNT7.rename(columns = {'index':'Cluster id'}, inplace = True)\n",
    "\n",
    "dbscan_one_rebalCNT7 = dbscan.fit(rebalCNT7[['Station id', 'rebalCNT']])\n",
    "labels8 = dbscan_one_rebalCNT7.labels_\n",
    "rebalCNT7['ClusterID'] = labels8\n",
    "plot_dbscan_rebalCNT7 = rebalCNT7['ClusterID'].value_counts().reset_index(name='Number of Stations')\n",
    "plot_dbscan_rebalCNT7.rename(columns = {'index':'Cluster id'}, inplace = True)\n",
    "\n",
    "dbscan = cluster.DBSCAN(eps=4, min_samples=3)\n",
    "dbscan_two_fromCNT8 = dbscan.fit(fromCNT8[['Station id', 'fromCNT']])\n",
    "labels9 = dbscan_two_fromCNT8.labels_\n",
    "fromCNT8['ClusterID'] = labels9\n",
    "plot_dbscan_fromCNT8 = fromCNT8['ClusterID'].value_counts().reset_index(name='Number of Stations')\n",
    "plot_dbscan_fromCNT8.rename(columns = {'index':'Cluster id'}, inplace = True)\n",
    "\n",
    "\n",
    "dbscan_two_rebalCNT8 = dbscan.fit(rebalCNT8[['Station id', 'rebalCNT']])\n",
    "labels10 = dbscan_two_rebalCNT8.labels_\n",
    "rebalCNT8['ClusterID'] = labels10\n",
    "plot_dbscan_rebalCNT8 = rebalCNT8['ClusterID'].value_counts().reset_index(name='Number of Stations')\n",
    "plot_dbscan_rebalCNT8.rename(columns = {'index':'Cluster id'}, inplace = True)\n",
    "\n",
    "dbscan = cluster.DBSCAN(eps=5, min_samples=4)\n",
    "dbscan_three_fromCNT9 = dbscan.fit(fromCNT9[['Station id', 'fromCNT']])\n",
    "labels11 = dbscan_three_fromCNT9.labels_\n",
    "fromCNT9['ClusterID'] = labels11\n",
    "plot_dbscan_fromCNT9 = fromCNT9['ClusterID'].value_counts().reset_index(name='Number of Stations')\n",
    "plot_dbscan_fromCNT9.rename(columns = {'index':'Cluster id'}, inplace = True)\n",
    "\n",
    "dbscan_three_rebalCNT9 = dbscan.fit(rebalCNT9[['Station id', 'rebalCNT']])\n",
    "labels12 = dbscan_three_rebalCNT9.labels_\n",
    "rebalCNT9['ClusterID'] = labels12\n",
    "plot_dbscan_rebalCNT9 = rebalCNT9['ClusterID'].value_counts().reset_index(name='Number of Stations')\n",
    "plot_dbscan_rebalCNT9.rename(columns = {'index':'Cluster id'}, inplace = True)\n",
    "\n",
    "# print(dbscan_one_fromCNT7)\n",
    "# print(dbscan_one_rebalCNT7)\n",
    "# print(dbscan_two_fromCNT8)\n",
    "# print(dbscan_two_rebalCNT8)\n",
    "# print(dbscan_three_fromCNT9)\n",
    "# print(dbscan_three_rebalCNT9)"
   ]
  }
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Task 4.2"
   ]
  }
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# K-means fromCNT for July with K=4\n",
    "fig = plt.figure(figsize=(15,10))\n",
    "plt.bar(range(len(plot_fromCNT7['Number of Stations'])),plot_fromCNT7['Number of Stations'], align = 'center')\n",
    "# Formatting graph\n",
    "plt.xticks(range(len(plot_fromCNT7['Cluster id'])), plot_fromCNT7['Cluster id'], rotation = 90, fontsize = 10)\n",
    "plt.xlabel('Cluster ID')\n",
    "plt.ylabel('Number of Stations')\n",
    "plt.title('K-means fromCNT for July with K=4')\n",
    "plt.show()\n",
    "\n",
    "\n",
    "# K-means rebalCNT for August with K=5\n",
    "fig = plt.figure(figsize=(15,10))\n",
    "plt.bar(range(len(plot_rebalCNT8['Number of Stations'])),plot_rebalCNT8['Number of Stations'], align = 'center')\n",
    "# Formatting graph\n",
    "plt.xticks(range(len(plot_rebalCNT8['Cluster id'])), plot_rebalCNT8['Cluster id'], rotation = 90, fontsize = 10)\n",
    "plt.xlabel('Cluster ID')\n",
    "plt.ylabel('Number of Stations')\n",
    "plt.title('K-means rebalCNT for August with K=5')\n",
    "plt.show()\n",
    "\n",
    "# K-means fromCNT for September with K=6\n",
    "fig = plt.figure(figsize=(15,10))\n",
    "plt.bar(range(len(plot_fromCNT9['Number of Stations'])),plot_fromCNT9['Number of Stations'], align = 'center')\n",
    "# Formatting graph\n",
    "plt.xticks(range(len(plot_fromCNT9['Cluster id'])), plot_fromCNT9['Cluster id'], rotation = 90, fontsize = 10)\n",
    "plt.xlabel('Cluster ID')\n",
    "plt.ylabel('Number of Stations')\n",
    "plt.title('K-means fromCNT for September with K=6')\n",
    "plt.show()\n",
    "\n",
    "# DBSCAN rebalCNT for July with eps=3, min_samples=2\n",
    "fig = plt.figure(figsize=(15,10))\n",
    "plt.bar(range(len(plot_dbscan_rebalCNT7['Number of Stations'])),plot_dbscan_rebalCNT7['Number of Stations'], align = 'center')\n",
    "# Formatting graph\n",
    "plt.xticks(range(len(plot_dbscan_rebalCNT7['Cluster id'])), plot_dbscan_rebalCNT7['Cluster id'], rotation = 90, fontsize = 10)\n",
    "plt.xlabel('Cluster ID')\n",
    "plt.ylabel('Number of Stations')\n",
    "plt.title('DBSCAN rebalCNT for July with eps=3, min_samples=2')\n",
    "plt.show()\n",
    "\n",
    "# DBSCAN fromCNT for August with eps=4, min_samples=3\n",
    "fig = plt.figure(figsize=(15,10))\n",
    "plt.bar(range(len(plot_dbscan_fromCNT8['Number of Stations'])),plot_dbscan_fromCNT8['Number of Stations'], align = 'center')\n",
    "# Formatting graph\n",
    "plt.xticks(range(len(plot_dbscan_fromCNT8['Cluster id'])), plot_dbscan_fromCNT8['Cluster id'], rotation = 90, fontsize = 10)\n",
    "plt.xlabel('Cluster ID')\n",
    "plt.ylabel('Number of Stations')\n",
    "plt.title('DBSCAN fromCNT for August with eps=4, min_samples=3')\n",
    "plt.show()\n",
    "\n",
    "# DBSCAN rebalCNT for September with eps=5, min_samples=4\n",
    "fig = plt.figure(figsize=(15,10))\n",
    "plt.bar(range(len(plot_dbscan_rebalCNT9['Number of Stations'])),plot_dbscan_rebalCNT9['Number of Stations'], align = 'center')\n",
    "# Formatting graph\n",
    "plt.xticks(range(len(plot_dbscan_rebalCNT9['Cluster id'])), plot_dbscan_rebalCNT9['Cluster id'], rotation = 90, fontsize = 10)\n",
    "plt.xlabel('Cluster ID')\n",
    "plt.ylabel('Number of Stations')\n",
    "plt.title('DBSCAN rebalCNT for September with eps=5, min_samples=4')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Task 4.3"
   ]
  }
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Answer:\n",
    "\n",
    "For K-means clusturing I chose, K of 4, 5, and 6. The reason for this was that the data was not large and I think that going over that point would have been a stretch. For DBSCAN clusturing, I chose the eps to be 3, 4, and 5. while, min_samples to be 2, 3, and 4.\n",
    "a) I think that the Best value for K in this case is 5.\n",
    "b) I think that the best algorighm for this case would be K-means with K=5. The reason for this is that DBSCAN had -1 as cluster. Another reason is that DBSCAN will more time to compute as the data grows, and this in this field the data will keep growing. So it is best to implement K-means and this may prevent us from switching algorighms in future."
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
